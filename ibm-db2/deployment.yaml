#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: db2
#  namespace: ecp
#  labels:
#    app.kubernetes.io/name: db2
#spec:
#  strategy:
#    rollingUpdate:
#      maxSurge: 1
#      maxUnavailable: 1
#    type: RollingUpdate
#  replicas: 1
#  selector:
#    matchLabels:
#      app: db2
#  template:
#    metadata:
#      labels:
#        app: db2
#    spec:
#      serviceAccountName: db2u
#      schedulerName: stork
#      containers:
#      - name: db2
#        image: ibmcom/db2:11.5.4.0
#        imagePullPolicy: "IfNotPresent"
#        ports:
#        - containerPort: 50000
#        env:
#        - name: DB2INST1_PASSWORD
#          value: "test123!"
#        - name: LICENSE
#          value: "accept"
#        - name: TO_CREATE_SAMPLEDB
#          value: "true"
#        - name: DB2INSTANCE
#          value: "db2inst1"
#        volumeMounts:
#        - mountPath: /database
#          name: db2data
#        securityContext:
#          privileged: true
#      securityContext:
#        fsGroup: 1000
#      imagePullSecrets:
#      - name: regcred
#      volumes:
#      - name: db2data
#        persistentVolumeClaim:
#          claimName: db2-pvc

apiVersion: apps/v1
kind: Deployment
metadata:
  name: db2
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: db2
  template:
    metadata:
      labels:
        app: db2
    spec:
      schedulerName: stork
      containers:
      - name: db2
        image: ibmcom/db2:11.5.4.0
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 50000
        env:
        - name: DB2INST1_PASSWORD
          value: "somepasswd!"
        - name: LICENSE
          value: "accept"
        - name: TO_CREATE_SAMPLEDB
          value: "true"
        - name: DB2INSTANCE
          value: "db2inst1"
        volumeMounts:
        - mountPath: /database
          name: db2data
        securityContext:
          privileged: true
      securityContext:
        fsGroup: 1000
      imagePullSecrets:
      - name: regcred
      volumes:
      - name: db2data
        persistentVolumeClaim:
          claimName: db2-pvc